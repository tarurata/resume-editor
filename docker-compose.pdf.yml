version: '3.8'

services:
  # Backend service with PDF export support
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - PYTHONPATH=/app
    volumes:
      - ./data:/app/data
      - ./resume_editor.db:/app/resume_editor.db
      # Mount templates for PDF generation
      - ./backend-app/templates:/app/templates
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v1/health" ]
      interval: 30s
      timeout: 30s
      start_period: 10s
      retries: 3
    restart: unless-stopped
    # Resource limits for PDF generation
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Frontend service (optional - for full stack)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000/api/v1
    depends_on:
      - backend
    healthcheck:
      test: [ "CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })" ]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3
    restart: unless-stopped

networks:
  default:
    name: resume-editor-pdf-network
